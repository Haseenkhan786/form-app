{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Chart } from 'chart.js';\nlet Kpi4Component = class Kpi4Component {\n  createChart() {\n    this.tableData = false;\n    this.tableBtn = false;\n    this.router.navigateByUrl('/kpi4');\n    this.chart = new Chart(\"MyChart\", {\n      type: 'bar',\n      data: {\n        labels: ['Alex Gonzalez', 'Barbara Olson', 'Benjamin Jensen', '2022-05-13', '2022-05-14', '2022-05-15', '2022-05-16', '2022-05-17'],\n        datasets: [{\n          label: \"Sales\",\n          data: ['467', '576', '572', '79', '92', '574', '573', '576'],\n          backgroundColor: 'blue'\n        }, {\n          label: \"Profit\",\n          data: ['542', '542', '536', '327', '17', '0.00', '538', '541'],\n          backgroundColor: 'limegreen'\n        }]\n      },\n      options: {\n        aspectRatio: 2.5\n      }\n    });\n  }\n  constructor(http, router) {\n    this.http = http;\n    this.router = router;\n    this.tableData = true;\n    this.tableBtn = true;\n    this.kpi4data = [];\n  }\n  ngOnInit() {\n    this.getEmployees();\n  }\n  getEmployees() {\n    this.http.get('http://localhost:8080/getkpi4').subscribe(data => {\n      this.kpi4data = data;\n      console.log(data);\n    }, error => {\n      console.error('Error fetching employee data:', error);\n    });\n  }\n};\nKpi4Component = __decorate([Component({\n  selector: 'app-kpi4',\n  templateUrl: './kpi4.component.html',\n  styleUrls: ['./kpi4.component.css']\n})], Kpi4Component);\nexport { Kpi4Component };","map":{"version":3,"names":["Component","Chart","Kpi4Component","createChart","tableData","tableBtn","router","navigateByUrl","chart","type","data","labels","datasets","label","backgroundColor","options","aspectRatio","constructor","http","kpi4data","ngOnInit","getEmployees","get","subscribe","console","log","error","__decorate","selector","templateUrl","styleUrls"],"sources":["/home/xs339-haskha/Desktop/task4/front/src/app/kpi4/kpi4.component.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { RouterLink } from '@angular/router';\nimport { Chart, ChartOptions, ChartType } from 'chart.js';\n\n@Component({\n  selector: 'app-kpi4',\n  templateUrl: './kpi4.component.html',\n  styleUrls: ['./kpi4.component.css']\n})\nexport class Kpi4Component implements OnInit {\n\n  public chart: any;\n  tableData: boolean = true;\n  tableBtn: boolean = true;\n \n\n  createChart(){\n  \n\n   \n\n   \n    this.tableData = false;\n    this.tableBtn = false;\n    this.router.navigateByUrl('/kpi4');\n\n\n  \n    this.chart = new Chart(\"MyChart\", {\n      type: 'bar', //this denotes tha type of chart\n\n      data: {// values on X-Axis\n        labels: ['Alex Gonzalez', 'Barbara Olson', 'Benjamin Jensen','2022-05-13',\n\t\t\t\t\t\t\t\t '2022-05-14', '2022-05-15', '2022-05-16','2022-05-17', ], \n\t       datasets: [\n          {\n            label: \"Sales\",\n            data: ['467','576', '572', '79', '92',\n\t\t\t\t\t\t\t\t '574', '573', '576'],\n            backgroundColor: 'blue'\n          },\n          {\n            label: \"Profit\",\n            data: ['542', '542', '536', '327', '17',\n\t\t\t\t\t\t\t\t\t '0.00', '538', '541'],\n            backgroundColor: 'limegreen'\n          }  \n        ]\n      },\n      options: {\n        aspectRatio:2.5\n      }\n      \n    });\n    \n \n}\n\n\n\nconstructor(private http: HttpClient,private router:r ) { }\n\n \nkpi4data: any[] = [];\n\nngOnInit(): void {\n  this.getEmployees();\n}\n\ngetEmployees() {\n\n  this.http.get<any[]>('http://localhost:8080/getkpi4').subscribe(\n    (data:any) => {\n      this.kpi4data = data;\n      console.log(data);\n      \n      \n    },\n    (error) => {\n      console.error('Error fetching employee data:', error);\n    }\n  );\n}\n\n}\n"],"mappings":";AACA,SAASA,SAAS,QAAgB,eAAe;AAEjD,SAASC,KAAK,QAAiC,UAAU;AAOzD,IAAaC,aAAa,GAA1B,MAAaA,aAAa;EAOxBC,WAAWA,CAAA;IAMT,IAAI,CAACC,SAAS,GAAG,KAAK;IACtB,IAAI,CAACC,QAAQ,GAAG,KAAK;IACrB,IAAI,CAACC,MAAM,CAACC,aAAa,CAAC,OAAO,CAAC;IAIlC,IAAI,CAACC,KAAK,GAAG,IAAIP,KAAK,CAAC,SAAS,EAAE;MAChCQ,IAAI,EAAE,KAAK;MAEXC,IAAI,EAAE;QACJC,MAAM,EAAE,CAAC,eAAe,EAAE,eAAe,EAAE,iBAAiB,EAAC,YAAY,EACxE,YAAY,EAAE,YAAY,EAAE,YAAY,EAAC,YAAY,CAAG;QACzDC,QAAQ,EAAE,CACR;UACEC,KAAK,EAAE,OAAO;UACdH,IAAI,EAAE,CAAC,KAAK,EAAC,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,EACxC,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC;UACjBI,eAAe,EAAE;SAClB,EACD;UACED,KAAK,EAAE,QAAQ;UACfH,IAAI,EAAE,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,EACzC,MAAM,EAAE,KAAK,EAAE,KAAK,CAAC;UACnBI,eAAe,EAAE;SAClB;OAEJ;MACDC,OAAO,EAAE;QACPC,WAAW,EAAC;;KAGf,CAAC;EAGN;EAIAC,YAAoBC,IAAgB,EAASZ,MAAQ;IAAjC,KAAAY,IAAI,GAAJA,IAAI;IAAqB,KAAAZ,MAAM,GAANA,MAAM;IAhDjD,KAAAF,SAAS,GAAY,IAAI;IACzB,KAAAC,QAAQ,GAAY,IAAI;IAkD1B,KAAAc,QAAQ,GAAU,EAAE;EAHsC;EAK1DC,QAAQA,CAAA;IACN,IAAI,CAACC,YAAY,EAAE;EACrB;EAEAA,YAAYA,CAAA;IAEV,IAAI,CAACH,IAAI,CAACI,GAAG,CAAQ,+BAA+B,CAAC,CAACC,SAAS,CAC5Db,IAAQ,IAAI;MACX,IAAI,CAACS,QAAQ,GAAGT,IAAI;MACpBc,OAAO,CAACC,GAAG,CAACf,IAAI,CAAC;IAGnB,CAAC,EACAgB,KAAK,IAAI;MACRF,OAAO,CAACE,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;IACvD,CAAC,CACF;EACH;CAEC;AA3EYxB,aAAa,GAAAyB,UAAA,EALzB3B,SAAS,CAAC;EACT4B,QAAQ,EAAE,UAAU;EACpBC,WAAW,EAAE,uBAAuB;EACpCC,SAAS,EAAE,CAAC,sBAAsB;CACnC,CAAC,C,EACW5B,aAAa,CA2EzB;SA3EYA,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}